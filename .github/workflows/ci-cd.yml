name: CI Pipeline

# Run the workflow on pushes and pull requests
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20' # Use a Node.js version compatible with your React app

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Run tests
      - name: Run tests
        run: npm test --ci

      # Step

#         This YAML code defines a GitHub Actions workflow called "CI Pipeline"

# Naming the GitHub Actions Workflow "CI Pipeline"
# name: CI Pipeline
# The workflow is named "CI Pipeline" and will show up with this name in the "Actions" tab of your GitHub repository.
# Trigger Conditions (on)
# # Run the workflow on pushes and pull requests
# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main
# push: The workflow is triggered whenever a commit is pushed to the main branch.
# pull_request: The workflow is triggered whenever a pull request is created or updated against the main branch.
# Jobs: The jobs section defines what tasks this workflow will perform. Here, a single job named test is defined and it specifies the environment where the job will run. In this case, it uses the latest version of Ubuntu
# jobs:
#   test:
#     runs-on: ubuntu-latest
# Steps: The steps section defines the sequence of actions that will be executed within the test job
# Step 1: Checkout the Code
# - name: Checkout code
#    uses: actions/checkout@v3
# Uses the actions/checkout GitHub Action to fetch the repository's code. This makes the repositoryâ€™s files available for the pipeline to work with.


# Step 2: Set Up Node.js
# - name: Set up Node.js
#   uses: actions/setup-node@v3
#   with:
#     node-version: '18'
# Configures the Node.js environment for the workflow.
# Installs and uses Node.js version 18, which is compatible with many React applications.


# Step 3: Install Dependencies
# - name: Install dependencies
#    run: npm install
# Installs the project dependencies specified in the package.json file using npm install.


# Step 4: Run Tests
# - name: Run tests
#   run: npm test -- --watchAll=false
# Executes the project's test suite using the npm test command.
# The --watchAll=false flag ensures the tests run once and exit (useful in a CI environment).
